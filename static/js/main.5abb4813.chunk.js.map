{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Section/Section.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/Container/Container.jsx","components/Section/Section.jsx","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-operations.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js"],"names":["module","exports","Container","className","s","container","this","props","children","Component","Section","title","section","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","dispatch","get","then","data","catch","error","contact","post","id","delete","INITIAL_STATE","name","number","ContactForm","state","nameInputId","shortid","generate","numberInputId","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","onSubmit","reset","form","label","htmlFor","input","type","pattern","required","onChange","btn","connect","contactOperations","getVisibleContact","filter","contacts","normalizedFilter","toLowerCase","includes","phonebook","onDeleteContact","list","map","item","onClick","inputId","e","contactActions","target","length","App","fetchContact","createReducer","_","payload","find","alert","loading","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","phonebookReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5abb4813.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1WiYD\",\"label\":\"ContactForm_label__38fIA\",\"input\":\"ContactForm_input__1pXP4\",\"btn\":\"ContactForm_btn__1qqQv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__1XNCe\",\"btn\":\"ContactList_btn__-YyV6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2y27y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__bAHji\",\"input\":\"Filter_input__1YwPe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3eQXo\"};","import { Component } from 'react';\nimport s from './Container.module.css';\n\nclass Container extends Component {\n  render() {\n    return <div className={s.container}>{this.props.children}</div>;\n  }\n}\n\nexport default Container;\n","import s from './Section.module.css';\nimport PropTypes from 'prop-types';\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n};\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\n};\n\nexport default Section;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactRequest = createAction(\n  'phonebook/fetchContactRequest',\n);\nexport const fetchContactSuccess = createAction(\n  'phonebook/fetchContactSuccess',\n);\nexport const fetchContactError = createAction('phonebook/fetchContactError');\n\nexport const addContactRequest = createAction('phonebook/addContactRequest');\nexport const addContactSuccess = createAction('phonebook/addContactSuccess');\nexport const addContactError = createAction('phonebook/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'phonebook/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'phonebook/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('phonebook/deleteContactError');\n\nexport const changeFilter = createAction('phonebook/changeFilter');\n","import axios from 'axios';\r\nimport {\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './phonebook-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nconst fetchContact = () => dispatch => {\r\n  dispatch(fetchContactRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\r\n    .catch(error => dispatch(fetchContactError(error)));\r\n};\r\n\r\nconst addContact = data => dispatch => {\r\n  const contact = {\r\n    ...data,\r\n  };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nconst deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  fetchContact,\r\n  addContact,\r\n  deleteContact,\r\n};\r\n","import { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport shortid from 'shortid';\nimport { connect } from 'react-redux';\nimport contactOperations from '../../redux/phonebook/phonebook-operations';\n\nimport s from './ContactForm.module.css';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\n\nclass ContactForm extends Component {\n  state = {\n    ...INITIAL_STATE,\n  };\n  nameInputId = shortid.generate();\n  numberInputId = shortid.generate();\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  render() {\n    return (\n      <div>\n        <form className={s.form} onSubmit={this.handleSubmit}>\n          <label className={s.label} htmlFor={this.nameInputId}>\n            Name\n            <input\n              className={s.input}\n              type=\"text\"\n              name=\"name\"\n              id={this.nameInputId}\n              value={this.state.name}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              onChange={this.handleChange}\n            />\n          </label>\n          <label htmlFor={this.numberInputId}>\n            Number\n            <input\n              className={s.input}\n              type=\"tel\"\n              name=\"number\"\n              id={this.numberInputId}\n              value={this.state.number}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              onChange={this.handleChange}\n            />\n          </label>\n          <button className={s.btn} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: data => dispatch(contactOperations.addContact(data)),\n});\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import { connect } from 'react-redux';\nimport contactOperations from '../../redux/phonebook/phonebook-operations';\nimport { PropTypes } from 'prop-types';\n\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={s.item} key={id}>\n          {name}: {number}\n          <button\n            className={s.btn}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nconst getVisibleContact = (filter, contacts) => {\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ phonebook: { filter, contacts } }) => ({\n  contacts: getVisibleContact(filter, contacts),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(contactOperations.deleteContact(id)),\n});\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape),\n  onDeleteContact: PropTypes.func,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as contactActions from '../../redux/phonebook/phonebook-actions';\nimport shortid from 'shortid';\nimport s from './Filter.module.css';\n\nconst inputId = shortid.generate();\n\nconst Filter = ({ contacts, value, onChange }) => {\n  const isShowContact = contacts.length;\n  return isShowContact ? (\n    <label className={s.label} htmlFor={inputId}>\n      Find contacts by name\n      <input\n        className={s.input}\n        id={inputId}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  ) : (\n    <p>You haven't any contacts</p>\n  );\n};\n\nconst mapStateToProps = state => ({\n  value: state.phonebook.filter,\n  contacts: state.phonebook.contacts,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(contactActions.changeFilter(e.target.value)),\n});\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Container from './components/Container';\nimport Section from './components/Section';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport contactOperations from '../src/redux/phonebook/phonebook-operations';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchContact();\n  }\n\n  render() {\n    return (\n      <Container>\n        <Section title={'Phonebook'}>\n          <ContactForm />\n        </Section>\n        <Section title={'Contacts'}>\n          <Filter />\n          <ContactList />\n        </Section>\n      </Container>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContact: () => dispatch(contactOperations.fetchContact()),\n});\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} from './phonebook-actions';\n\nconst contacts = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => {\n    const isNoUnique = state.find(contact => contact.name === payload.name);\n    if (isNoUnique) {\n      alert(`${payload.name} is alredy in contacts`);\n      return state;\n    } else {\n      return [...state, payload];\n    }\n  },\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n  loading,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport phonebookReducer from './phonebook/phonebook-reducer';\nimport logger from 'redux-logger';\nimport {\n  // persistStore,\n  // persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n// import storage from 'redux-persist/lib/storage';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\n// const phonebookPersistConfig = {\n//   key: 'contacts',\n//   storage,\n//   blacklist: ['filter'],\n// };\n\nconst store = configureStore({\n  reducer: {\n    phonebook: phonebookReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\n// const persistor = persistStore(store);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n// import { PersistGate } from 'redux-persist/integration/react';\n\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}