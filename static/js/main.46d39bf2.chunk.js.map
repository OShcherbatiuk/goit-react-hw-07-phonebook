{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Section/Section.module.css","components/Container/Container.module.css","redux/phonebook/phonebook-actions.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Container/Container.jsx","components/Section/Section.jsx","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","data","payload","id","uuidv4","deleteContact","changeFilter","INITIAL_STATE","name","number","ContactForm","state","nameInputId","shortid","generate","numberInputId","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","className","s","form","this","label","htmlFor","input","type","pattern","title","required","onChange","btn","Component","connect","dispatch","contactActions","getVisibleContact","filter","contacts","normalizedFilter","toLowerCase","contact","includes","phonebook","onDeleteContact","list","map","item","onClick","inputId","e","target","length","Container","container","children","Section","section","App","createReducer","actions","find","alert","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","phonebookPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","phonebookReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.46d39bf2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__1XNCe\",\"btn\":\"ContactList_btn__-YyV6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__bAHji\",\"input\":\"Filter_input__1YwPe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2y27y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3eQXo\"};","// import actionTypes from './phonebook-types';\nimport { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\n// const addContact = data => ({\n//   type: actionTypes.ADD,\n//   payload: {\n//     id: uuidv4(),\n//     ...data,\n//   },\n// });\n\nconst addContact = createAction('phonebook/addContact', data => ({\n  payload: {\n    id: uuidv4(),\n    ...data,\n  },\n}));\n\n// const deleteContact = id => ({\n//   type: actionTypes.DELETE,\n//   payload: id,\n// });\n\nconst deleteContact = createAction('phonebook/deleteContact');\n\n// const changeFilter = value => ({\n//   type: actionTypes.FILTER,\n//   payload: value,\n// });\n\nconst changeFilter = createAction('phonebook/changeFilter');\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { addContact, deleteContact, changeFilter };\n","import { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport shortid from 'shortid';\nimport { v4 as uuidv4 } from 'uuid';\nimport { connect } from 'react-redux';\nimport contactActions from '../../redux/phonebook/phonebook-actions';\n\nimport s from './ContactForm.module.css';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\n\nclass ContactForm extends Component {\n  state = {\n    ...INITIAL_STATE,\n  };\n  nameInputId = shortid.generate();\n  numberInputId = shortid.generate();\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({\n      id: uuidv4(),\n      [name]: value,\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  render() {\n    return (\n      <div>\n        <form className={s.form} onSubmit={this.handleSubmit}>\n          <label className={s.label} htmlFor={this.nameInputId}>\n            Name\n            <input\n              className={s.input}\n              type=\"text\"\n              name=\"name\"\n              id={this.nameInputId}\n              value={this.state.name}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              onChange={this.handleChange}\n            />\n          </label>\n          <label htmlFor={this.numberInputId}>\n            Number\n            <input\n              className={s.input}\n              type=\"tel\"\n              name=\"number\"\n              id={this.numberInputId}\n              value={this.state.number}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              onChange={this.handleChange}\n            />\n          </label>\n          <button className={s.btn} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: data => dispatch(contactActions.addContact(data)),\n});\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import { connect } from 'react-redux';\nimport contactActions from '../../redux/phonebook/phonebook-actions';\nimport { PropTypes } from 'prop-types';\n\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={s.item} key={id}>\n          {name}: {number}\n          <button\n            className={s.btn}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nconst getVisibleContact = (filter, contacts) => {\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ phonebook: { filter, contacts } }) => ({\n  contacts: getVisibleContact(filter, contacts),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(contactActions.deleteContact(id)),\n});\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape),\n  onDeleteContact: PropTypes.func,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport contactActions from '../../redux/phonebook/phonebook-actions';\nimport shortid from 'shortid';\nimport s from './Filter.module.css';\n\nconst inputId = shortid.generate();\n\nconst Filter = ({ contacts, value, onChange }) => {\n  const isShowContact = contacts.length;\n  return isShowContact ? (\n    <label className={s.label} htmlFor={inputId}>\n      Find contacts by name\n      <input\n        className={s.input}\n        id={inputId}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  ) : (\n    <p>You haven't any contacts</p>\n  );\n};\n\nconst mapStateToProps = state => ({\n  value: state.phonebook.filter,\n  contacts: state.phonebook.contacts,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(contactActions.changeFilter(e.target.value)),\n});\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { Component } from 'react';\nimport s from './Container.module.css';\n\nclass Container extends Component {\n  render() {\n    return <div className={s.container}>{this.props.children}</div>;\n  }\n}\n\nexport default Container;\n","import s from './Section.module.css';\nimport PropTypes from 'prop-types';\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n};\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\n};\n\nexport default Section;\n","// import { Component } from 'react';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport Container from './components/Container';\nimport Section from './components/Section';\n\nconst App = () => {\n  // componentDidMount() {\n  //   const contacts = localStorage.getItem('contacts');\n  //   const parsedContacts = JSON.parse(contacts);\n  //   if (parsedContacts) {\n  //     this.setState({ contacts: parsedContacts });\n  //   }\n  // }\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (this.state.contacts !== prevState.contacts) {\n  //     localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n  //   }\n  // }\n  return (\n    <Container>\n      <Section title={'Phonebook'}>\n        <ContactForm />\n      </Section>\n      <Section title={'Contacts'}>\n        <Filter />\n        <ContactList />\n      </Section>\n    </Container>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n// import types from './phonebook-types';\nimport actions from './phonebook-actions';\n\n// const contacts = (state = [], { type, payload }) => {\n//   switch (type) {\n//     case types.ADD:\n//       const isNoUnique = state.find(contact => contact.name === payload.name);\n//       if (isNoUnique) {\n//         alert(`${payload.name} is alredy in contacts`);\n//         return state;\n//       } else {\n//         return [...state, payload];\n//       }\n//     // eslint-disable-next-line no-fallthrough\n//     case types.DELETE:\n//       return state.filter(({ id }) => id !== payload);\n\n//     default:\n//       return state;\n//   }\n// };\n\nconst contacts = createReducer([], {\n  [actions.addContact]: (state, { payload }) => {\n    const isNoUnique = state.find(contact => contact.name === payload.name);\n    if (isNoUnique) {\n      alert(`${payload.name} is alredy in contacts`);\n      return state;\n    } else {\n      return [...state, payload];\n    }\n  },\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\n// const filter = (state = '', { type, payload }) => {\n//   switch (type) {\n//     case types.FILTER:\n//       return payload;\n\n//     default:\n//       return state;\n//   }\n// };\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n});\n","// import { combineReducers } from 'redux';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n// import { composeWithDevTools } from 'redux-devtools-extension';\nimport phonebookReducer from './phonebook/phonebook-reducer';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\n// const rootReducer = combineReducers({\n//   phonebook: phonebookReducer,\n// });\n\n// const store = createStore(rootReducer, composeWithDevTools());\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst phonebookPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: {\n    phonebook: persistReducer(phonebookPersistConfig, phonebookReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1WiYD\",\"label\":\"ContactForm_label__38fIA\",\"input\":\"ContactForm_input__1pXP4\",\"btn\":\"ContactForm_btn__1qqQv\"};"],"sourceRoot":""}